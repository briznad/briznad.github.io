/* ==========================================================================
   my custom styles
   ========================================================================== */

// mixins

@mixin prefix($rule, $val) {
	@each $browser in -webkit-, -moz-, -ms-, -o-, "" {
		#{$browser}#{$rule}: $val;
	}
}

// /mixins

// color variables

$greenLt: #1abc9c;
$greenDk: #16a085;

$blueLt: #3498db;
$blueDk: #2980b9;

$purpleLt: #9b59b6;
$purpleDk: #8e44ad;

$yellowLt: #f1c40f;
$yellowDk: #f39c12;

// /color variables

/* helper styles */

.visually-hidden {
    position: absolute !important;
    clip: rect(1px 1px 1px 1px);
    clip: rect(1px,1px,1px,1px);
    padding: 0 !important;
    border: 0 !important;
    height: 1px !important;
    width: 1px !important;
    overflow: hidden;
}

.relative-container {
    position: relative;
}

.left {
	float: left;
}

.right {
	float: right;
}

/* /helper styles */

/* general page styles */

html {
	background-color: #3a3a3a;
	background-image: url(../images/low_contrast_linen.png);
}

body {
	margin: 0 20px 40px 20px;
	padding: 0;
	-webkit-font-smoothing: antialiased;
	font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 300;
	color: rgb(245, 245, 245);
}

a {
	font-weight: bold;
	text-decoration: none;
	color: rgb(235, 235, 235);

	&:hover {
		text-decoration: underline;
		text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);
	}
}

h1 {
	font-size: 3.3em;
	$shadowColor: #e74c3c;
	text-shadow: 1px 1px 0 $shadowColor, 2px 2px 0 $shadowColor, 3px 3px 0 $shadowColor;
}

h2 {
	margin-bottom: 0.3em;
}

.attribution {
	position: absolute;
	top: 0;
	right: 0;
	margin: 8px 10px;
}

nav {
	text-align: center;
	margin: 0;
	max-width: 870px;

	position: relative;
	left: 50%;

	@include prefix(transform, translateX(-50%));
}

.button {
	display: inline-block;
	min-width: 180px;
	padding: 1em;
	text-align: center;
	border-radius: 6px;

	&:hover {
		text-decoration: none;
		text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);
	}

	$lightenBy: 3%;

	&:nth-child(1) {
		$buttonColor: $greenLt;

		background-color: $buttonColor;
		box-shadow: 5px 5px 0 $greenDk;

		&:hover {
			background-color: lighten($buttonColor, $lightenBy);
		}
		&:active {
			background-color: darken($buttonColor, $lightenBy);
		}
	}
	&:nth-child(2) {
		$buttonColor: $blueLt;

		background-color: $buttonColor;
		box-shadow: 5px 5px 0 $blueDk;

		&:hover {
			background-color: lighten($buttonColor, $lightenBy);
		}
		&:active {
			background-color: darken($buttonColor, $lightenBy);
		}
	}
	&:nth-child(3) {
		$buttonColor: $purpleLt;

		background-color: $buttonColor;
		box-shadow: 5px 5px 0 $purpleDk;

		&:hover {
			background-color: lighten($buttonColor, $lightenBy);
		}
		&:active {
			background-color: darken($buttonColor, $lightenBy);
		}
	}
}

.container {
	display: inline-block;
	min-width: 420px;
	min-height: 420px;
	margin: 2.7em 0;
	padding: 40px;
	border-radius: 8px;
	background-color: $yellowLt;
	box-shadow: 10px 10px 0 $yellowDk;

	position: relative;
	left: 50%;

	@include prefix(transform, translateX(-50%));
}

img {
	position: relative;
	box-shadow: -7px -7px 0 rgba(0, 0, 255, 0.6);
}

/* state-specific styles */



/* /state-specific styles */

/* dev */



/* /dev */

/* /general page styles */

/* responsive media queries */

@media (min-width: 1025px) { /* if larger than typical tablet display, aka desktop styles */



}

@media (max-width: 480px) { /* if smaller or equal to typical phone display, aka phone styles */



}